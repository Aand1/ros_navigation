<!-- Launches Kobuki Gazebo simulation in an empty world -->
<launch>
	<arg name="odom_frame_id" default="/odom" />
	<arg name="base_frame_id" default="/base_link" />
	<arg name="global_frame_id" default="/odom" />
	<arg name="custom_param_file" default="$(find custom_description)/param/dummy.yaml" />
	<!-- start Gazebo with an empty world -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="use_sim_time" value="true" />
		<arg name="debug" value="false" />
		<arg name="world_name" value="$(find custom_description)/worlds/loop1.world" />
	</include>
	<!-- spawn the robot -->
	<include file="$(find custom_description)/launch/robot.launch.xml">
		<arg name="urdf_file" value="$(find xacro)/xacro.py '$(find custom_description)/description/kobuki/urdf/kobuki_standalone_sonar.urdf.xacro'"/>
	</include>
	<!-- make move strategy -->
	<!-- <include file="$(find kobuki_gazebo)/launch/apps/safe_random_walker_app.launch"/> -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(find custom_description)/maps/blank.yaml" />
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<rosparam file="$(find custom_description)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
		<rosparam file="$(find custom_description)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find custom_description)/param/local_costmap_params.yaml" command="load" />
		<rosparam file="$(find custom_description)/param/global_costmap_params.yaml" command="load" />
		<rosparam file="$(find custom_description)/param/dwa_local_planner_params.yaml" command="load" />
		<rosparam file="$(find custom_description)/param/global_planner_params.yaml" command="load" />
		<rosparam file="$(find custom_description)/param/move_base_params.yaml" command="load" />
		<rosparam file="$(find custom_description)/param/navfn_global_planner_params.yaml" command="load" />
		<!-- external params file that could be loaded into the move_base namespace -->
		<rosparam file="$(arg custom_param_file)" command="load" />
		<!-- reset frame_id parameters using user input data -->
		<param name="global_costmap/global_frame" value="$(arg global_frame_id)" />
		<param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)" />
		<param name="local_costmap/global_frame" value="$(arg odom_frame_id)" />
		<param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)" />
		<param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)" />
		<remap from="cmd_vel" to="cmd_vel_mux/move_base_controller" />
	</node>
	<node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
		<param name="yaml_cfg_file" value="$(find custom_description)/param/velocity_mux.yaml" />
		<remap from="cmd_vel_mux/output/cmd_vel" to="mobile_base/commands/velocity" />
	</node>
	<node pkg="nodelet" type="nodelet" name="kobuki_safety_controller" args="load kobuki_safety_controller/SafetyControllerNodelet mobile_base_nodelet_manager">
		<remap from="kobuki_safety_controller/cmd_vel" to="cmd_vel_mux/safety_controller" />
		<remap from="kobuki_safety_controller/events/bumper" to="mobile_base/events/bumper" />
		<remap from="kobuki_safety_controller/events/cliff" to="mobile_base/events/cliff" />
		<remap from="kobuki_safety_controller/events/wheel_drop" to="mobile_base/events/wheel_drop" />
	</node>
	<!--<node pkg="nodelet" type="nodelet" name="kobuki_random_walker_controller" args="load kobuki_random_walker/RandomWalkerControllerNodelet mobile_base_nodelet_manager"><param name="update_rate" value="30.0" /><param name="linear_velocity" value="0.3" /><param name="angular_velocity" value="1" /><remap from="kobuki_random_walker_controller/events/bumper" to="mobile_base/events/bumper" /><remap from="kobuki_random_walker_controller/events/cliff" to="mobile_base/events/cliff" /><remap from="kobuki_random_walker_controller/events/wheel_drop" to="mobile_base/events/wheel_drop" /><remap from="kobuki_random_walker_controller/commands/led1" to="mobile_base/commands/led1" /><remap from="kobuki_random_walker_controller/commands/led2" to="mobile_base/commands/led2" /><remap from="kobuki_random_walker_controller/commands/velocity" to="cmd_vel_mux/random_walker" /></node>-->
	<!-- covert bump event to bump point clound for map -->
	<!--<node pkg="nodelet" type="nodelet" name="bumper2pointcloud" args="load kobuki_bumper2pc/Bumper2PcNodelet mobile_base_nodelet_manager"><param name="pointcloud_radius" value="0.25" /><remap from="bumper2pointcloud/pointcloud" to="mobile_base/sensors/bumper_pointcloud" /><remap from="bumper2pointcloud/core_sensors" to="mobile_base/sensors/core" /></node>-->
	<!-- view the navigation -->
	<node pkg="rviz" name="view" type="rviz" args="-d $(find custom_description)/nav.rviz" />
	<!-- control the robot with keyboard-->
	<node pkg="custom_description" type="keyControl" name="keyControl" launch-prefix="xterm -e">
		<param name="scale_linear" value = "0.3"/>
		<param name="scale_angular" value= "0.5"/>
		<remap from="keyControl/cmd_vel" to="cmd_vel_mux/remotControl" />
	</node>
	<node pkg="custom_description" type="follow_edge_node" name="followEdge" output="screen"><remap from="followEdge/vel" to="cmd_vel_mux/follow_edge"/></node>
</launch>